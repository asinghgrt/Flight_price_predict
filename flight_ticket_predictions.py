# -*- coding: utf-8 -*-
"""Flight_ticket_predictions.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1m73VGbtPNzFX7zW_OevbxIrc4scG-_Dr
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn import metrics
from sklearn.linear_model import Lasso

data=pd.read_csv('/content/Data_Train[1].csv')

data.head()

data.isnull().sum()

data.dropna(how='any',inplace=True)



data['Airline'].value_counts()

data['Source'].value_counts()

data['Destination'].value_counts()

data['Total_Stops'].value_counts()

data['Additional_Info'].value_counts()



"""Labellling data to numeric types:

"""

data.replace({'Airline':{'Jet Airways':0,'IndiGo':1,'Air India':2,'Multiple carriers':3,'SpiceJet':4,'Vistara':5,'Air Asia':6,'GoAir':7,'Multiple carriers Premium economy':8,'Jet Airways Business':9,
'Vistara Premium economy':10,
'Trujet':11}},inplace=True)

data.head()



data.replace({'Source':{'Delhi':0,
'Kolkata':1,
'Banglore':2,
'Mumbai':3,
'Chennai':4}},inplace=True)

data.head()



"""marking of destnation:
Destination':'Cochin':0,
'Banglore':1,
'Delhi':2,
'New Delhi':3,
'Hyderabad':4,
'Kolkata':5
"""

data.replace({'Destination':{'Cochin':0,
'Banglore':1,
'Delhi':2,
'New Delhi':3,
'Hyderabad':4,
'Kolkata':5 }},inplace=True)

data.head()

data.replace({'Total_Stops':{'1 stop':0,
'non-stop':1,
'2 stops':2,
'3 stops':3,
'4 stops':4        }},inplace=True)

data.head()

data.replace({'Additional_Info':{'No info':0,
'In-flight meal not included':1,
'No check-in baggage included':2,
'1 Long layover':3,
'Change airports':4,
'Business class':5,
'No Info':6,
'1 Short layover':7,
'Red-eye flight':8,
'2 Long layover':9}},inplace=True)

data.head()

x=data.drop(['Date_of_Journey','Route','Dep_Time',	'Arrival_Time','Additional_Info','Price','Duration'],axis=1)
y=data['Price']

print(x)

print(y)

"""train-test Split:"""



x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.1,random_state=1)

model=Lasso()
data.isnull().sum()

model.fit(x_train,y_train)

train_predict=model.predict(x_train)
error_score=metrics.r2_score(y_train,train_predict)
print(error_score)

model.fit(x_test,y_test)
test_predict=model.predict(x_test)
error_score=metrics.r2_score(y_test,test_predict)
print(error_score)

score = model.score(x_test, y_test)
print('Test Accuracy Score', score)

new=(2,0,0,2)
new_np=np.asarray(new)
new_reshape=new_np.reshape(1,-1)
cost=model.predict(new_reshape)
print("Predcited Price by Cosidering Airline,Source,Destintaion and Total number of stops is:",cost)

